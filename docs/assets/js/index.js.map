{"version":3,"file":"index.js","sources":["../../../js/collapse-element.js","../../../js/satellite-tracker.js","../../../js/index.js"],"sourcesContent":["export default class CollapseElement {\n    #trigger;\n    #targets;\n\n    constructor(selector = '[data-collapse-target]') {\n        this.#trigger = document.querySelector(selector);\n\n        const targetsSelector = this.#trigger.dataset.collapseTarget;\n        this.#targets = document.querySelectorAll(targetsSelector);\n\n        this.#addListener();\n    }\n\n    show() {\n        this.#targets.forEach((target) => {\n            this.#trigger.classList.remove('collapsed');\n            target.classList.add('show');\n            target.style.maxHeight = target.scrollHeight + 'px';\n        });\n    }\n\n    hide() {\n        this.#targets.forEach((target) => {\n            this.#trigger.classList.add('collapsed');\n            target.classList.remove('show');\n            target.style.maxHeight = null;\n        });\n    }\n\n    #addListener() {\n        this.#trigger.addEventListener('click', () => {\n            const isCollapsed = this.#trigger.classList.contains('collapsed');\n\n            if (isCollapsed) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        });\n    }\n}\n","const isObject = (value) => {\n    return typeof value === 'object' && !Array.isArray(value) && value !== null;\n}\n\n// A simple objects deep merging for the settings options.\nconst merge = (target, source) => {\n    for (const key in source) {\n        if (isObject(target[key]) && isObject(source[key])) {\n            target[key] = merge(target[key], source[key]);\n        } else {\n            target[key] = source[key];\n        }\n    }\n\n    return target;\n}\n\nexport default class SatelliteTracker {\n    #defaultSettings = {\n        containerSelector: 'satellite-tracker',\n        details: {\n            generate: true,\n            selector: 'satellite-details',\n            partsSelector: 'satellite-details-part',\n            parts : {\n                latitude: {\n                    valueSelector: 'satellite-latitude',\n                    label: 'Latitude: ',\n                },\n                longitude: {\n                    valueSelector: 'satellite-longitude',\n                    label: 'Longitude: ',\n                },\n                velocity: {\n                    valueSelector: 'satellite-velocity',\n                    label: 'Speed: ',\n                },\n                altitude: {\n                    valueSelector: 'satellite-altitude',\n                    label: 'Altitude: ',\n                },\n                visibility: {\n                    valueSelector: 'satellite-visibility',\n                    label: 'Visibility: ',\n                },\n            },\n        },\n        map: {\n            generate: true,\n            selector: 'satellite-world-map',\n            title: 'World map',\n            parts: {\n                marker: {\n                    selector: 'satellite-marker',\n                    title: 'Satellite',\n                }\n            }\n        }\n    };\n    #satellite;\n    #domHandler;\n    #intervalID;\n\n    constructor(satelliteID, settings = {}) {\n        this.#satellite = new Satellite(satelliteID);\n\n        const mergedSettings = merge(merge({}, this.#defaultSettings), settings);\n        this.#domHandler = new DOMHandler(mergedSettings);\n    }\n\n    runAutoupdate(delay) {\n        this.updateValues();\n        this.#intervalID = setInterval(()=>this.updateValues(), delay);\n    }\n\n    stopAutoupdate() {\n        clearInterval(this.#intervalID);\n    }\n\n    updateValues() {\n        this.#satellite.getStatus().then(data => {\n            this.#domHandler.setDetails(data.details);\n\n            this.#domHandler.setMarker(data.marker.top, data.marker.left);\n            \n        }).catch(error => {\n            console.error(error.message);\n        });\n    }\n}\n\nclass Satellite {\n    #satelliteID;\n\n    constructor(satelliteID) {\n        this.#satelliteID = satelliteID;\n    }\n\n    async getStatus() {\n        const response = await fetch(`https://api.wheretheiss.at/v1/satellites/${this.#satelliteID}`);\n        \n        if (!response.ok) {\n            throw new Error(response.status);\n        }\n\n        const data = await response.json();\n\n        return this.#toSupplementValues(data);\n    }\n\n    #toSupplementValues(data) {\n        const supplementedValues = {\n            details: {\n                latitude: data.latitude.toFixed(2),\n                longitude: data.longitude.toFixed(2),\n                velocity: `${data.velocity.toFixed(2)} km/hr`,\n                altitude: `${data.altitude.toFixed(2)} km`,\n                visibility: data.visibility,\n            },\n            marker: {\n                top: this.#getMarkerEquirectangularTopPosition(data.latitude),\n                left: this.#getMarkerEquirectangularLeftPosition(data.longitude),\n            }\n        };\n\n        return supplementedValues;\n    }\n\n    #getMarkerEquirectangularTopPosition(latitude) {\n        const top = 100 - (latitude + 90) * 100 / 180;\n        return `${top}%`;\n    }\n\n    #getMarkerEquirectangularLeftPosition(longitude) {\n        const left = (longitude + 180) * 100 / 360;\n        return `${left}%`;\n    }\n}\n\nclass DOMHandler {\n\n    #settings = {};\n    #containerElement;\n    #markerElement;\n    #valuesElements = {};\n\n    constructor(settings) {\n        this.#settings = settings;\n        this.#containerElement = document.querySelector(`.${this.#settings.containerSelector}`);\n\n        this.#initMapAndMarker();\n        this.#initDetails();\n    }\n\n    setMarker(top, left) {\n        this.#markerElement.style.top = top;\n        this.#markerElement.style.left = left;\n    }\n\n    setDetails(details) {\n        for (const name in details) {\n            this.#setDetail(name, details[name]);\n        }\n    }\n\n    #setDetail(name, value) {\n        this.#valuesElements[name].innerText = value;\n    }\n\n    #initMapAndMarker() {\n        if (this.#settings.map.generate) {\n            const mapElement = this.#generateMapElement();\n            this.#generateMarkerElement(mapElement);\n        }\n\n        this.#markerElement = this.#containerElement.querySelector(`.${this.#settings.map.parts.marker.selector}`);\n    }\n\n    #generateMapElement() {\n        const mapElement = document.createElement(\"DIV\");\n        mapElement.classList.add(this.#settings.map.selector);\n        mapElement.title = this.#settings.map.title;\n        this.#containerElement.append(mapElement);\n\n        return mapElement;\n    }\n\n    #generateMarkerElement(mapElement) {\n        const marker = document.createElement(\"DIV\");\n        marker.classList.add(this.#settings.map.parts.marker.selector);\n        marker.title = this.#settings.map.parts.marker.title;\n        mapElement.append(marker);\n\n        return marker;\n    }\n\n    #initDetails() {\n        if (this.#settings.details.generate) {\n            const detailsElement = this.#generateDetailsElement();\n            this.#generateDetailsParts(detailsElement);\n        }\n\n        this.#valuesElements = this.#getValuesElements();\n    }\n\n    #generateDetailsElement() {\n        const detailsElement = document.createElement(\"P\");\n        detailsElement.classList.add(this.#settings.details.selector);\n        this.#containerElement.append(detailsElement);\n\n        return detailsElement;\n    }\n\n    #generateDetailsParts(detailsElement) {\n        const parts = this.#settings.details.parts;\n\n        for (const name in this.#settings.details.parts) {\n            this.#generateDetailsPart(detailsElement, this.#settings.details.parts[name]);\n        }\n    }\n\n    #generateDetailsPart(detailsElement, part) {\n        const rowElement = document.createElement(\"SPAN\");\n        rowElement.classList.add(this.#settings.details.partsSelector);\n        rowElement.innerText = part.label;\n\n        const valueElement = document.createElement(\"SPAN\");\n        valueElement.classList.add(part.valueSelector);\n        rowElement.append(valueElement);\n\n        detailsElement.append(rowElement);\n    }\n\n    #getValuesElements() {\n        const result = {};\n\n        for (const name in this.#settings.details.parts) {\n            result[name] = this.#containerElement.querySelector(`.${this.#settings.details.parts[name].valueSelector}`);\n        }\n\n        return result;\n    }\n}\n\nexport class ISSTracker extends SatelliteTracker {\n    constructor(settings = {\n        containerSelector: 'iss-tracker',\n        map: {\n            parts: {\n                marker: {\n                    title: 'ISS',\n                },\n            }\n        }\n    }) {\n        super('25544', settings);\n    }\n}\n","import CollapseElement from './collapse-element.js';\nimport { ISSTracker } from './satellite-tracker.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    // Navbar collapsing\n    const burger = new CollapseElement('#burger');\n\n    // ISS Tracker start\n    const ISS = new ISSTracker();\n    ISS.runAutoupdate(60000);\n});\n"],"names":["CollapseElement","constructor","selector","Object","defineProperty","_addListener","value","_addListener2","_trigger","writable","_targets","_classPrivateFieldLooseBase","document","querySelector","targetsSelector","dataset","collapseTarget","querySelectorAll","show","forEach","target","classList","remove","add","style","maxHeight","scrollHeight","hide","addEventListener","isCollapsed","contains","isObject","Array","isArray","merge","source","key","_defaultSettings","_classPrivateFieldLooseKey","_satellite","_domHandler","_intervalID","SatelliteTracker","satelliteID","settings","containerSelector","details","generate","partsSelector","parts","latitude","valueSelector","label","longitude","velocity","altitude","visibility","map","title","marker","Satellite","mergedSettings","DOMHandler","runAutoupdate","delay","updateValues","setInterval","stopAutoupdate","clearInterval","getStatus","then","data","setDetails","setMarker","top","left","catch","error","console","message","_satelliteID","_toSupplementValues","_getMarkerEquirectangularTopPosition","_getMarkerEquirectangularLeftPosition","_getMarkerEquirectangularLeftPosition2","_getMarkerEquirectangularTopPosition2","_toSupplementValues2","response","fetch","ok","Error","status","json","supplementedValues","toFixed","_settings","_containerElement","_markerElement","_valuesElements","_setDetail","_initMapAndMarker","_generateMapElement","_generateMarkerElement","_initDetails","_generateDetailsElement","_generateDetailsParts","_generateDetailsPart","_getValuesElements","_getValuesElements2","_generateDetailsPart2","_generateDetailsParts2","_generateDetailsElement2","_initDetails2","_generateMarkerElement2","_generateMapElement2","_initMapAndMarker2","_setDetail2","name","innerText","mapElement","createElement","append","detailsElement","part","rowElement","valueElement","result","ISSTracker","ISS"],"mappings":"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"}